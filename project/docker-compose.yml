version: '3'

volumes:
  pgdata:

services:
  broker-td:
    build:
      context: ./../broker-td
      dockerfile: ./../broker-td/broker-td.dockerfile
    restart: always
    ports:
      - "3000:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      PORT: 80
    user: '${UID}:${GID}'

  telegram-bot-service:
    build:
      context: ./../telegram-bot-service
      dockerfile: ../telegram-bot-service/telegram-bot-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - user-service
    user: '${UID}:${GID}'

  user-service:
    build:
      context: ./../user-service
      dockerfile: ./../user-service/user-service.dockerfile
    restart: always
    ports:
      - "3001:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRE_DSN: "host=postgres-tbs port=5432 user=postgres password=password dbname=users_tbs sslmode=disable timezone=UTC connect_timeout=3"
      PORT: 80
    depends_on:
      - postgres-tbs
    user: '${UID}:${GID}'

  postgres-tbs:
    image: "postgres:latest"
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_tbs
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/
    user: '${UID}:${GID}'
    healthcheck:
      test: pg_isready -U postgres -d users_tbs
      interval: 10s
      timeout: 3s
      retries: 5

  migrate:
    image: migrate/migrate
    volumes:
      - ./../user-service/migrations:/migrations
    user: '${UID}:${GID}'
    command: [ "-path", "/migrations/", "-database",  "postgres://postgres:password@postgres-tbs:5432/users_tbs?sslmode=disable", "up", "3" ]
    links:
      - postgres-tbs
    depends_on:
      - postgres-tbs